openapi: 3.0.0
info:
    title: OpenAPI definition
    version: v0
servers:
    -   url: http://localhost:8080
        description: Generated server url
paths:
    /user:
        get:
            tags:
                - UserApi
            operationId: getCurrentUser
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"
    /users:
        get:
            tags:
                - UserApi
            operationId: getAllUsers
#            security:
#                -   bearerAuth: []
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/User"

        post:
            tags:
                - UserApi
            operationId: createUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateUserDto"
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"

    /sheet:
        get:
            tags:
                - SheetApi
            operationId: getAllSheets
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Sheet"
        post:
            tags:
                - SheetApi
            operationId: createSheet
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/SheetDto"
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Sheet"

    /sheet/pdf:
        post:
            tags:
                - SheetApi
            operationId: previewSheetDto
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SheetDto'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/pdf:
                            schema:
                                type: string
                                format: byte

    /sheet/{id}:
        get:
            tags:
                - SheetApi
            operationId: getSheetById
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Sheet"
        put:
            tags:
                - SheetApi
            operationId: updateSheet
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SheetDto'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Sheet'
        delete:
            tags:
                - SheetApi
            operationId: deleteSheet
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: string
            responses:
                "200":
                    description: OK

    /sheet/{id}/pdf:
        get:
            tags:
                - SheetApi
            operationId: getSheetPdf
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/pdf:
                            schema:
                                type: string
                                format: byte

    /exercise:
        get:
            tags:
                - ExerciseApi
            operationId: getAllExercises
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Exercise"
        post:
            tags:
                - ExerciseApi
            operationId: createExercise
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ExerciseDto"
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Exercise"

    /exercise/pdf:
        post:
            tags:
                - ExerciseApi
            operationId: previewExerciseDto
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ExerciseDto'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/pdf:
                            schema:
                                type: string
                                format: byte

    /exercise/{id}:
        get:
            tags:
                - ExerciseApi
            operationId: getExerciseById
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Exercise"
        put:
            tags:
                - ExerciseApi
            operationId: updateExercise
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ExerciseDto'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Exercise'

        delete:
            tags:
                - ExerciseApi
            operationId: deleteExercise
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: string
            responses:
                "200":
                    description: OK

    /exercise/{id}/pdf:
        get:
            tags:
                - ExerciseApi
            operationId: getExercisePdf
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/pdf:
                            schema:
                                type: string
                                format: byte

    /courses:
        get:
            tags:
                - CourseApi
            operationId: getAllCourses
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Course"
        post:
            tags:
                - CourseApi
            operationId: createCourse
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateCourseDto"
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Course"

    /courses/{id}:
        get:
            tags:
                - CourseApi
            operationId: getCourseById
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Course"
        delete:
            tags:
                - CourseApi
            operationId: deleteCourse
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: string
            responses:
                "200":
                    description: OK

    /categories:
        get:
            tags:
                - CategoryApi
            operationId: getAllCategories
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Category"
        post:
            tags:
                - CategoryApi
            operationId: createCategory
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateCategoryDto"
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Category"

    /categories/{id}:
        get:
            tags:
                - CategoryApi
            operationId: getCategoryById
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Category"
        delete:
            tags:
                - CategoryApi
            operationId: deleteCategory
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: string
            responses:
                "200":
                    description: OK

    /image:
        get:
            tags:
                - TestApi
            operationId: getImage
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: string
        post:
            tags:
                - TestApi
            operationId: saveImage
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: string

components:
    schemas:
        Sheet:
            type: object
            required:
                - id
                - title
                - updatedAt
                - publishedAt
                - author
                - courses
                - categories
                - exercises
                - isPublished
            properties:
                id:
                    type: string
                updatedAt:
                    type: string
                    format: date-time
                publishedAt:
                    type: string
                    format: date-time
                isPublished:
                    type: boolean
                useNumericTitles:
                    type: boolean
                showSolutions:
                    type: boolean
                title:
                    type: string
                author:
                    $ref: "#/components/schemas/Author"
                courses:
                    type: array
                    items:
                        $ref: "#/components/schemas/Course"
                categories:
                    type: array
                    items:
                        $ref: "#/components/schemas/Category"
                exercises:
                    type: array
                    items:
                        $ref: "#/components/schemas/Exercise"

        User:
            type: object
            required:
                - username
            properties:
                id:
                    type: string
                username:
                    type: string

        Author:
            type: object
            required:
                - name
            properties:
                id:
                    type: string
                name:
                    type: string

        Course:
            type: object
            required:
                - name
            properties:
                id:
                    type: string
                name:
                    type: string

        Category:
            type: object
            required:
                - name
            properties:
                id:
                    type: string
                name:
                    type: string

        Exercise:
            type: object
            required:
                - id
                - isPublished
                - isUsed
                - publishedAt
                - author
                - title
                - categories
                - solutions
                - shortDescription
                - texts
                - courses
            properties:
                id:
                    type: string
                publishedAt:
                    type: string
                    format: date-time
                isPublished:
                    type: boolean
                isUsed:
                    type: boolean
                author:
                    $ref: "#/components/schemas/Author"
                courses:
                    type: array
                    items:
                        $ref: "#/components/schemas/Course"
                categories:
                    type: array
                    items:
                        $ref: "#/components/schemas/Category"
                title:
                    type: string
                shortDescription:
                    type: string
                note:
                    type: string
                texts:
                    type: array
                    items:
                        type: string
                solutions:
                    type: array
                    items:
                        type: string
                images:
                    type: array
                    items:
                        type: string

        SheetDto:
            required:
                - title
                - courses
                - categories
                - exercises
            type: object
            properties:
                isPublished:
                    type: boolean
                useNumericTitles:
                    type: boolean
                showSolutions:
                    type: boolean
                title:
                    type: string
                courses:
                    type: array
                    items:
                        $ref: "#/components/schemas/CreateCourseDto"
                categories:
                    type: array
                    items:
                        $ref: "#/components/schemas/CreateCategoryDto"
                exercises:
                    type: array
                    items:
                        $ref: "#/components/schemas/Exercise"

        CreateUserDto:
            type: object
            required:
                - username
            properties:
                username:
                    type: string
                password:
                    type: string

        CreateCourseDto:
            required:
                - name
            type: object
            properties:
                name:
                    type: string

        CreateCategoryDto:
            required:
                - name
            type: object
            properties:
                name:
                    type: string

        ExerciseDto:
            required:
                - title
                - courses
                - categories
                - texts
                - solutions
            type: object
            properties:
                isPublished:
                    type: boolean
                isUsed:
                    type: boolean
                title:
                    type: string
                courses:
                    type: array
                    items:
                        $ref: "#/components/schemas/CreateCourseDto"
                categories:
                    type: array
                    items:
                        $ref: "#/components/schemas/CreateCategoryDto"
                note:
                    type: string
                shortDescription:
                    type: string
                texts:
                    type: array
                    items:
                        type: string
                solutions:
                    type: array
                    items:
                        type: string
                images:
                    type: array
                    items:
                        type: string

